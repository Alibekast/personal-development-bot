import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# Telegram Bot API —Ç–æ–∫–µ–Ω—ñ–Ω –∂–∞–∑—É
API_TOKEN = '8110633206:AAHwJgpPyK7vv8N9vU39fgCh1vU3MIOBYCE'  # –ú“±–Ω–¥–∞ ”©–∑—ñ“£—ñ–∑–¥—ñ“£ API —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑–¥—ñ “õ–æ–π—ã“£—ã–∑

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# Bot –∂”ô–Ω–µ Dispatcher –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è—Å—ã
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

class PersonalDevelopmentBot:
    def __init__(self):
        self.data = {
            'personal_development': {
                'books': {
                    'read': [],
                    'recommendations': [
                        "¬´–ê—Ç–æ–º–¥—ã“õ –¥–∞“ì–¥—ã–ª–∞—Ä¬ª –î–∂–µ–π–º—Å –ö–ª–∏—Ä",
                        "¬´7 —Ç–∏—ñ–º–¥—ñ –¥–∞“ì–¥—ã¬ª –°—Ç–∏–≤–µ–Ω –ö–æ–≤–∏",
                        "¬´–¢“±–ª“ì–∞–Ω—ã“£ “õ“±—Ä—ã–ª—ã–º—ã¬ª –ö–∞—Ä–ª –Æ–Ω–≥"
                    ]
                },
                'videos': {
                    'youtube_links': [
                        "https://youtube.com/personal-growth",
                        "https://youtube.com/mindfulness-course"
                    ]
                },
                'daily_practices': [
                    "–ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ –∂—É—Ä–Ω–∞–ª –∂–∞–∑–±–∞–ª–∞—Ä—ã",
                    "–ú–µ–¥–∏—Ç–∞—Ü–∏—è 15 –º–∏–Ω—É—Ç",
                    "SPLENDID ”ô–¥—ñ—Å—ñ –±–æ–π—ã–Ω—à–∞ –∂–æ—Å–ø–∞—Ä–ª–∞—É"
                ]
            },
            'skills_development': {
                'categories': {
                    '—Ç–µ—Ö–Ω–∏–∫–∞–ª—ã“õ –¥–∞“ì–¥—ã–ª–∞—Ä': [],
                    '”ô–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –¥–∞“ì–¥—ã–ª–∞—Ä': [],
                    '—à—ã“ì–∞—Ä–º–∞—à—ã–ª—ã“õ –¥–∞“ì–¥—ã–ª–∞—Ä': []
                },
                'progress_tracking': {}
            },
            'time_management': {
                'schedule': {},
                'priority_matrix': []
            },
            'daily_tasks': {
                'task_list': [],
                'reminders': []
            }
        }

    # –ë–æ—Ç—Ç—ã“£ –Ω–µ–≥—ñ–∑–≥—ñ –º–µ–Ω—é—ñ–Ω –∫”©—Ä—Å–µ—Ç—É
    async def show_menu(self, message: types.Message):
        await message.answer("\nüèÜ –ù–µ–≥—ñ–∑–≥—ñ –º–µ–Ω—é:\n"
                             "1. –¢“±–ª“ì–∞–ª—ã“õ –¥–∞–º—É\n"
                             "2. –î–∞“ì–¥—ã–ª–∞—Ä–¥—ã –¥–∞–º—ã—Ç—É\n"
                             "3. –£–∞“õ—ã—Ç –±–∞—Å“õ–∞—Ä—É\n"
                             "4. –ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä\n"
                             "5. –®—ã“ì—É")

    # –¢“±–ª“ì–∞–ª—ã“õ –¥–∞–º—É –±”©–ª—ñ–º—ñ
    async def personal_dev_menu(self, message: types.Message):
        await message.answer("\nüìö –¢“±–ª“ì–∞–ª—ã“õ –¥–∞–º—É –±”©–ª—ñ–º—ñ:\n"
                             "1. –û“õ—ã–ª“ì–∞–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä\n"
                             "2. –ö–µ“£–µ—Å –∫—ñ—Ç–∞–ø—Ç–∞—Ä\n"
                             "3. –ü–∞–π–¥–∞–ª—ã –≤–∏–¥–µ–æ–ª–∞—Ä\n"
                             "4. –ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª–µ—Ä\n"
                             "5. –ê—Ä—Ç“õ–∞")
    
    async def show_books(self, message: types.Message):
        books = "\n".join(self.data['personal_development']['books']['read']) or "–ö—ñ—Ç–∞–ø—Ç–∞—Ä –∂–æ“õ."
        await message.answer(f"üìñ –û“õ—ã–ª“ì–∞–Ω –∫—ñ—Ç–∞–ø—Ç–∞—Ä —Ç—ñ–∑—ñ–º—ñ:\n{books}")

    async def show_recommendations(self, message: types.Message):
        recommendations = "\n".join(self.data['personal_development']['books']['recommendations'])
        await message.answer(f"üåü –ö–µ“£–µ—Å –∫—ñ—Ç–∞–ø—Ç–∞—Ä:\n{recommendations}")

    async def show_videos(self, message: types.Message):
        videos = "\n".join(self.data['personal_development']['videos']['youtube_links'])
        await message.answer(f"üé• –ü–∞–π–¥–∞–ª—ã –≤–∏–¥–µ–æ–ª–∞—Ä:\n{videos}")

    async def show_practices(self, message: types.Message):
        practices = "\n".join(self.data['personal_development']['daily_practices'])
        await message.answer(f"üåÖ –ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª–µ—Ä:\n{practices}")

    async def handle_message(self, message: types.Message):
        if message.text == '/start':
            await message.answer("üéâ –°”ô–ª–µ–º! –ú–µ–Ω—ñ“£ –±–æ—Ç—ã–º–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! ”®–∑ –¥–∞–º—É –∂–æ–ª—ã–Ω–¥–∞ –∫”©–º–µ–∫ –∫”©—Ä—Å–µ—Ç—É “Ø—à—ñ–Ω –º–µ–Ω –æ—Å—ã–Ω–¥–∞–º—ã–Ω.")
            await self.show_menu(message)

        elif message.text == '1':
            await self.personal_dev_menu(message)

        elif message.text == '2':
            await message.answer("üòé –î–∞“ì–¥—ã–ª–∞—Ä–¥—ã –¥–∞–º—ã—Ç—É –±”©–ª—ñ–º—ñ–Ω –∂–∞“õ—ã–Ω–¥–∞ “õ–æ—Å–∞–º—ã–∑!")
        elif message.text == '3':
            await message.answer("üóì –£–∞“õ—ã—Ç –±–∞—Å“õ–∞—Ä—É –±”©–ª—ñ–º—ñ–Ω –∂–∞“õ—ã–Ω–¥–∞ “õ–æ—Å–∞–º—ã–∑!")
        elif message.text == '4':
            await message.answer("‚è≥ –ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä –±”©–ª—ñ–º—ñ–Ω –∂–∞“õ—ã–Ω–¥–∞ “õ–æ—Å–∞–º—ã–∑!")
        elif message.text == '5':
            await message.answer("üéâ –°–∞—É –±–æ–ª—ã“£—ã–∑!")
        else:
            await message.answer("‚ùì –ë–µ–ª–≥—ñ—Å—ñ–∑ —Ç–∞“£–¥–∞—É! “ö–∞–π—Ç–∞–¥–∞–Ω —Ç–∞“£–¥–∞—É –∂–∞—Å–∞“£—ã–∑.")
    
    async def process_command(self, message: types.Message):
        if message.text == '1':
            await self.show_books(message)
        elif message.text == '2':
            await self.show_recommendations(message)
        elif message.text == '3':
            await self.show_videos(message)
        elif message.text == '4':
            await self.show_practices(message)

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
if __name__ == '__main__':
    bot_instance = PersonalDevelopmentBot()

    @dp.message_handler(commands=['start'])
    async def start_command(message: types.Message):
        await bot_instance.handle_message(message)

    @dp.message_handler()
    async def echo(message: types.Message):
        await bot_instance.handle_message(message)
    
    executor.start_polling(dp, skip_updates=True)
